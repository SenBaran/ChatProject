import { Directive, HostListener, Input } from '@angular/core';
import { FormControl } from '@angular/forms';
import { Observable } from 'rxjs/Observable';
import { forkJoin } from 'rxjs/observable/forkJoin';
import { first, take } from 'rxjs/operators';
import { FileJson } from './file-form-control.interface';
var FileFormControlDirective = /** @class */ (function () {
    function FileFormControlDirective() {
    }
    FileFormControlDirective.prototype.onChange = function (event) {
        var _this = this;
        var files = event.target.files;
        if (!(files && files.length > 0)) {
            this.fileFormControl.setValue(undefined);
        }
        else {
            var callbackFn = function (array, file) { return array.concat([_this.transform(file)]); };
            forkJoin(Array.prototype.reduce.call(files, callbackFn, [])).pipe(take(1)).subscribe(function (value) { return _this.fileFormControl.setValue(value); });
        }
    };
    FileFormControlDirective.prototype.transform = function (file) {
        return new Observable(function (subscriber) {
            var reader = new FileReader();
            var listener = function () { return subscriber.next({ name: file.name, type: file.type, value: reader.result }); };
            reader.addEventListener('load', listener);
            reader.readAsDataURL(file);
        }).pipe(first());
    };
    return FileFormControlDirective;
}());
export { FileFormControlDirective };
//# sourceMappingURL=file-form-control.directive.js.map