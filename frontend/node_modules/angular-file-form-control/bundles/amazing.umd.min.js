!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@angular/core"),require("@angular/forms"),require("rxjs/Observable"),require("rxjs/observable/forkJoin"),require("rxjs/operators")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/forms","rxjs/Observable","rxjs/observable/forkJoin","rxjs/operators"],r):r(e["angular-file-form-control"]={},e.ng.core,e.ng.forms,e.Rx,e.Rx.Observable,e.Rx.Observable.prototype)}(this,function(e,r,o,n,t,i){"use strict";var a=function(){},s=function(){function e(){}return e.prototype.onChange=function(e){var o=this,r=e.target.files;if(r&&0<r.length){t.forkJoin(Array.prototype.reduce.call(r,function(e,r){return e.concat([o.transform(r)])},[])).pipe(i.take(1)).subscribe(function(e){return o.fileFormControl.setValue(e)})}else this.fileFormControl.setValue(void 0)},e.prototype.transform=function(o){return new n.Observable(function(e){var r=new FileReader;r.addEventListener("load",function(){return e.next({name:o.name,type:o.type,value:r.result})}),r.readAsDataURL(o)}).pipe(i.first())},e}(),u=function(){};e.FileFormControlModule=u,e.FileFormControlDirective=s,e.FileJson=a,Object.defineProperty(e,"__esModule",{value:!0})});