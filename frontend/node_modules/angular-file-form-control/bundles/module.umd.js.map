{"version":3,"file":"module.umd.js","sources":["../../src/file-form-control.interface.ts","../../src/file-form-control.directive.ts","../../src/file-form-control.module.ts"],"names":["forkJoin","take","Observable","first"],"mappings":";;;;;;AAAG,IAAH,QAAQ,kBACN,YAAY;AAAE,IAAI,SAChB,QAAQ,GAAG;AAAE,KAAK;AAAC,IACrB,OAAO,QAHT,CAAC;AAAC,CAAC,EAAE,CAIJ,CAAA;AAJD;ACOE,IAAC,wBACW,kBAAkB,YAAY;AAAE,IAAI,SAG9C,wBAAwB,GAAG;AAAE,KAAK;AAAC,IAK5B,wBAEX,CAAC,SAAS,CAAC,QAFQ,GAAG,UAAF,KAAU,EAAE;AAChC,QACO,IAAI,KAAK,GAAG,IAAI,CAAC;AAAC,QAAjB,IAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;AACzC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,YAAY,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AACrD,SAAS;AAAC,QAAA,IAAI,CAAC,CAAC;AAChB,YAAY,IAAM,UAAU,GAAG,UAAC,KAAiB,EAAE,IAAU,EAAE,EAAG,OAAI,KAAK,CAAC,MAAM,CAAC,CAAN,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CACnG,CADkE,CAAgC,CAAC;AACnG,YAAYA,iBAAQ,CACJ,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,EAAE,EAAE,CAAC,CACrD,CAAC,IAAI,CACFC,cAAI,CAAC,CAAC,CAAC,CACV,CAAC,SAAS,CAAC,UAAC,KAAiB,EAAE,EAAG,OAAA,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAArC,CAAoC,CAAC,CAAC;AACrF,SAAS;AACT,KAAK,CACL;AACA,IAAY,wBAAwB,CAAC,SAAS,CAAC,SAA1B,GAAjB,UAAkB,IAAU,EAAE;AAAE,QAC5B,MAAM,CAAC,IAAIC,qBAAU,CAAW,UAAC,UAAU,EAAE;AAAE,YAC3C,IAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;AAC5C,YAAY,IAAM,QAAQ,GAAG,YAAY,EAAN,OAAA,UAAU,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,MAAM,EAAC,CAAC,CAAC,CAA1E,CAAyE,CAAC;AAC7G,YAAY,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AACtD,YAAY,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACvC,SAAS,CAAC,CAAC,IAAI,CACHC,eAAK,EAAE,CACV,CAAC;AACV,KAAK,CACL;AAAC,IACE,OAAO,wBA1CV,CAAC;AAAC,CAAC,EAAE,CAAC;AAAE;ACGN,IAAC,qBACS,kBACF,YAAY;AAAE,IAAI,SACzB,qBAED,GAAG;AAAE,KAAK;AAAC,IAAI,OAAO,qBARxB,CAAC;AAAC,CAAC,EAAE,CAAC;AAAE;AAAC;AACe;AAGxB;AACS;AAAC;AAGO;AAAC;AAAM","sourcesContent":["export class FileJson {\r\n    public name: string;\r\n    public type: string;\r\n    public value: string;\r\n}\r\n","import {Directive, HostListener, Input} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs/Observable';\nimport {forkJoin} from 'rxjs/observable/forkJoin';\nimport {first, take} from 'rxjs/operators';\nimport {FileJson} from './file-form-control.interface';\n\n@Directive({\n    selector: 'input[type=file][fileFormControl]',\n})\n\nexport class FileFormControlDirective {\n\n    @Input() private fileFormControl: FormControl;\n\n    @HostListener('change', ['$event'])\n    public onChange(event: any) {\n\n        const files = event.target.files;\n        if (!(files && files.length > 0)) {\n            this.fileFormControl.setValue(undefined);\n        } else {\n            const callbackFn = (array: FileJson[], file: File) => [...array, this.transform(file)];\n            forkJoin(\n                Array.prototype.reduce.call(files, callbackFn, []),\n            ).pipe(\n                take(1),\n            ).subscribe((value: FileJson[]) => this.fileFormControl.setValue(value));\n        }\n    }\n\n    private transform(file: File): Observable<FileJson> {\n        return new Observable<FileJson>((subscriber) => {\n            const reader = new FileReader();\n            const listener = () => subscriber.next({name: file.name, type: file.type, value: reader.result});\n            reader.addEventListener('load', listener);\n            reader.readAsDataURL(file);\n        }).pipe(\n            first(),\n        );\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {FileFormControlDirective} from './file-form-control.directive';\n\n@NgModule({\n    declarations: [\n        FileFormControlDirective,\n    ],\n    exports: [\n        FileFormControlDirective,\n    ],\n})\nexport class FileFormControlModule {\n}\n"]}