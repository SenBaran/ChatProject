{"version":3,"file":"module.umd.js","sources":["../src/file-form-control.interface.js","../src/file-form-control.directive.js","../src/file-form-control.module.js"],"sourcesContent":["var FileJson = /** @class */ (function () {\r\n    function FileJson() {\r\n    }\r\n    return FileJson;\r\n}());\r\nexport { FileJson };\r\n//# sourceMappingURL=file-form-control.interface.js.map","import { Directive, HostListener, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { forkJoin } from 'rxjs/observable/forkJoin';\r\nimport { first, take } from 'rxjs/operators';\r\nimport { FileJson } from './file-form-control.interface';\r\nvar FileFormControlDirective = /** @class */ (function () {\r\n    function FileFormControlDirective() {\r\n    }\r\n    FileFormControlDirective.prototype.onChange = function (event) {\r\n        var _this = this;\r\n        var files = event.target.files;\r\n        if (!(files && files.length > 0)) {\r\n            this.fileFormControl.setValue(undefined);\r\n        }\r\n        else {\r\n            var callbackFn = function (array, file) { return array.concat([_this.transform(file)]); };\r\n            forkJoin(Array.prototype.reduce.call(files, callbackFn, [])).pipe(take(1)).subscribe(function (value) { return _this.fileFormControl.setValue(value); });\r\n        }\r\n    };\r\n    FileFormControlDirective.prototype.transform = function (file) {\r\n        return new Observable(function (subscriber) {\r\n            var reader = new FileReader();\r\n            var listener = function () { return subscriber.next({ name: file.name, type: file.type, value: reader.result }); };\r\n            reader.addEventListener('load', listener);\r\n            reader.readAsDataURL(file);\r\n        }).pipe(first());\r\n    };\r\n    return FileFormControlDirective;\r\n}());\r\nexport { FileFormControlDirective };\r\n//# sourceMappingURL=file-form-control.directive.js.map","import { NgModule } from '@angular/core';\r\nimport { FileFormControlDirective } from './file-form-control.directive';\r\nvar FileFormControlModule = /** @class */ (function () {\r\n    function FileFormControlModule() {\r\n    }\r\n    return FileFormControlModule;\r\n}());\r\nexport { FileFormControlModule };\r\n//# sourceMappingURL=file-form-control.module.js.map"],"names":["forkJoin","take","Observable","first"],"mappings":";;;;;;AAAG,IAAC,QAAQ,kBAAkB,YAAY;IACtC,SAAS,QAAQ,GAAG;KACnB;IACD,OAAO,QAAQ,CAAC;CACnB,EAAE,CAAC;;ACED,IAAC,wBAAwB,kBAAkB,YAAY;IACtD,SAAS,wBAAwB,GAAG;KACnC;IACD,wBAAwB,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,KAAK,EAAE;QAC3D,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC/B,IAAI,EAAE,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;YAC9B,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;SAC5C;aACI;YACD,IAAI,UAAU,GAAG,UAAU,KAAK,EAAE,IAAI,EAAE,EAAE,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC1FA,iBAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAACC,cAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,UAAU,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;SAC5J;KACJ,CAAC;IACF,wBAAwB,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,IAAI,EAAE;QAC3D,OAAO,IAAIC,qBAAU,CAAC,UAAU,UAAU,EAAE;YACxC,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAC9B,IAAI,QAAQ,GAAG,YAAY,EAAE,OAAO,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC;YACnH,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC9B,CAAC,CAAC,IAAI,CAACC,eAAK,EAAE,CAAC,CAAC;KACpB,CAAC;IACF,OAAO,wBAAwB,CAAC;CACnC,EAAE,CAAC;;AC3BD,IAAC,qBAAqB,kBAAkB,YAAY;IACnD,SAAS,qBAAqB,GAAG;KAChC;IACD,OAAO,qBAAqB,CAAC;CAChC,EAAE,CAAC;;;;;;;;;;;;;;"}