{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/websocket.service.ts","./src/app/entities/user.ts","./src/app/services/http.service.ts","./src/app/entities/room.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/loginpage/loginpage.component.ts","./src/app/pages/loginpage/loginpage.component.html","./src/app/pages/chat/chat.component.ts","./src/app/pages/chat/chat.component.html","./src/app/app.module.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { EventEmitter, Injectable, Output } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebsocketService {\r\n  private websocket : WebSocket;\r\n  private url = \"ws://localhost:9000/chat/\";\r\n  \r\n  @Output() chatUpdated = new EventEmitter<string>();\r\n  @Output() usersUpdated = new EventEmitter<string>();\r\n  @Output() connected = new EventEmitter<boolean>();\r\n  toSendMessage : string = \"\";\r\n\r\n  public ngopenWebSocket(username : string){\r\n    this.websocket = new WebSocket(this.url + username);\r\n\r\n    this.websocket.onopen = (event) => this.connected.emit(true);\r\n    this.websocket.onclose = (event) => this.connected.emit(false);\r\n    this.websocket.onerror = (event) => this.connected.emit(false);\r\n    this.websocket.onmessage = (event) =>{\r\n      this.chatUpdated.emit(event.data);\r\n    } \r\n\r\n\r\n  }\r\n\r\n  public sendMessage(msg : string, toUsername : string) : void{\r\n    \r\n    this.toSendMessage = msg + \";\" + toUsername;\r\n    this.websocket.send(this.toSendMessage);\r\n  }\r\n\r\n  public closeWebSocket() : void{\r\n    this.websocket.close();\r\n  }\r\n}\r\n","export class ChatUser {\r\n    constructor(\r\n        public user_id : number = 0,\r\n        public firstname : string,\r\n        public lastname : string,\r\n        public username : string,\r\n    ){}\r\n}","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { stringify } from '@angular/compiler/src/util';\r\nimport { Injectable } from '@angular/core';\r\nimport { TouchSequence } from 'selenium-webdriver';\r\nimport { ChatUser } from '../entities/user';\r\n\r\n\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/x-www-form-urlencoded',\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class HttpService {\r\n\r\n  private hs: HttpClient;\r\n  public otherUser : ChatUser;\r\n  constructor(hs: HttpClient) { this.hs = hs }\r\n  private url = \"http://devapi.xtechnik.com\";\r\n  public loggedInUsername: string = \"\";\r\n  public loggedInUserId : string = \"\";\r\n  public messages = [];\r\n\r\n\r\n  public async getUserById(userId : Number){\r\n    return await this.hs.get(this.url + \"/user/byId/\" + userId).toPromise();\r\n  }\r\n\r\n  public async getAllUsers(){\r\n    return await this.hs.get<ChatUser[]>(this.url + \"/user/getAllUsers\").toPromise();\r\n  }\r\n\r\n\r\n  public async getAllMessages(roomId : Number) {\r\n    return await this.hs.get(this.url + \"/message/getAllMessages/\" + roomId).toPromise();\r\n  }\r\n\r\n  public async getAllRoomsByUserId(userId : Number) {\r\n    var data = await this.hs.get(this.url + \"/chatroomuser/getAllRoomsByUserId/\" + userId).toPromise();\r\n    console.log(data);\r\n    return data;\r\n  }\r\n\r\n  public async getAllUsersByRoomId(roomId : Number) {\r\n    return await this.hs.get(this.url + \"/chatroomuser/getAllUsersByRoomId/\" + roomId).toPromise();\r\n  }\r\n\r\n\r\n  public async getUserByUserName(username: String) {\r\n    this.otherUser = await this.hs.get<ChatUser>(this.url + \"/user/byUsername/\" + username).toPromise();\r\n\r\n  }\r\n\r\n  public async login(eMail: string, password: string) {\r\n    let body = new URLSearchParams();\r\n    body.set('email', eMail);\r\n    body.set('password', password);\r\n    var loggedInData = await this.hs.post(this.url + \"/user/login\", body.toString(), httpOptions).toPromise();\r\n    this.loggedInUsername = eMail;\r\n\r\n    var dataExtract = loggedInData[\"data\"];\r\n    this.loggedInUserId = dataExtract[\"user_id\"];\r\n\r\n    return true;\r\n\r\n  }\r\n\r\n  public async saveMessagePHPBackend(roomId: Number, otherUserId : Number, message: String, loggedInUserId: Number , nowDate2: string) {\r\n    let body = new URLSearchParams();\r\n    body.set('roomId', String(roomId));\r\n    body.set('senderUserId', String(loggedInUserId));\r\n    body.set('recieverUserId', String(otherUserId));\r\n    body.set('message', String(message));\r\n    body.set('timestamp', nowDate2);\r\n\r\n    await this.hs.post(this.url + \"/message/saveMessage\", body.toString(), httpOptions).toPromise();\r\n  }\r\n\r\n  public async saveRoomPHPBackend(creator : string, roomName: string){\r\n    let body = new URLSearchParams();\r\n    body.set('creator', creator);\r\n    body.set('roomName', roomName);\r\n\r\n    return await this.hs.post(this.url + '/chatroom/saveChatRoom', body.toString(), httpOptions).toPromise();\r\n  }\r\n\r\n  public async saveChatRoomUserPHPBackend(roomId : number, userId: number){\r\n    let body = new URLSearchParams();\r\n    body.set('roomId', String(roomId));\r\n    body.set('userId', String(userId));\r\n\r\n    var tdata = {\r\n      roomId: String(roomId),\r\n      userId: String(userId)\r\n    }\r\n    console.log(tdata);\r\n    await this.hs.post(this.url + '/chatroomuser/addChatRoomUser', tdata, httpOptions).toPromise();\r\n  }\r\n}\r\n","import { TOUCH_BUFFER_MS } from \"@angular/cdk/a11y\";\r\n\r\nexport class Room {\r\n    public roomId : Number;\r\n    public chat = [];\r\n    public roomUsers = [];\r\n\r\n    constructor(roomId : Number, chat : String[] , roomUser: String[]){\r\n        this.roomId = roomId;\r\n        this.chat = chat;\r\n        this.roomUsers = roomUser;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { WebsocketService } from './services/websocket.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent{\r\n  title = 'ChatWebsocketFrontend';\r\n}\r\n","<router-outlet>\r\n\r\n</router-outlet> ","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpService } from 'src/app/services/http.service';\r\n\r\n@Component({\r\n  selector: 'app-loginpage',\r\n  templateUrl: './loginpage.component.html',\r\n  styleUrls: ['./loginpage.component.css']\r\n})\r\nexport class LoginpageComponent implements OnInit {\r\n\r\n  public username = \"\";\r\n  public password = \"\";\r\n  constructor(private hs : HttpService, private router : Router ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public async checkUser() : Promise<void>{\r\n    if(await this.hs.login(this.username, this.password)){\r\n      this.router.navigate(['/chat']);\r\n    }\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<form class=\"center\">\r\n  <mat-form-field class=\"login-form-field\" color=\"warn\">\r\n    <mat-label>Username</mat-label>\r\n    <input matInput [(ngModel)]=\"username\" name=\"username\" >\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"login-form-field\" color=\"warn\">\r\n    <mat-label>Password</mat-label>\r\n    <input matInput [(ngModel)]=\"password\" name=\"password\" type=\"password\">\r\n  </mat-form-field>\r\n  <button class=\"clcon\" mat-stroked-button class=\"login-form-field\" color=\"warn\" (click)=\"checkUser()\">Login</button>\r\n</form>","import { Component, OnInit, SystemJsNgModuleLoader } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { allowedNodeEnvironmentFlags } from 'process';\r\nimport { logging } from 'protractor';\r\nimport { Observable } from 'rxjs';\r\nimport { TouchSequence } from 'selenium-webdriver';\r\nimport { Message } from 'src/app/entities/message';\r\nimport { Room } from 'src/app/entities/room';\r\nimport { ChatUser } from 'src/app/entities/user';\r\nimport { HttpService } from 'src/app/services/http.service';\r\nimport { createBrotliCompress } from 'zlib';\r\nimport { WebsocketService } from '../../services/websocket.service';\r\nimport {map, startWith} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.css']\r\n})\r\nexport class ChatComponent {\r\n  public msg = \"\";\r\n  public username = \"\";\r\n  public chat: string[] = [];\r\n  public users = [];\r\n  private toJSON: JSON;\r\n  private allRooms: Room[] = [];\r\n  public currentRoom: Room;\r\n  public allUsersInContactList: ChatUser[] = [];\r\n  public myControl = new FormControl();\r\n  public filteredOptions: Observable<ChatUser[]>;\r\n\r\n\r\n  constructor(private ws: WebsocketService, public hs: HttpService) { }\r\n\r\n  public async ngOnInit() {\r\n    this.ws.connected.subscribe();\r\n    this.ws.chatUpdated.subscribe(item => this.updateChat(item));\r\n    this.ws.ngopenWebSocket(this.hs.loggedInUsername);\r\n    this.loadAllRooms();\r\n    this.loadAllUsers();\r\n    //this.loadAllMessages();\r\n    //this.ws.usersUpdated.subscribe(item => this.addToUsersList(item));\r\n    this.filteredOptions = this.myControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filter(value)),\r\n    );\r\n\r\n  }\r\n\r\n\r\n  private _filter(value: string): ChatUser[] {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.allUsersInContactList.filter(option => option.username.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  public closeWebSocket(): void {\r\n    this.ws.closeWebSocket();\r\n  }\r\n\r\n  public sendMsg(): void {\r\n    this.ws.sendMessage(this.msg, this.currentRoom.roomUsers[1]);\r\n    var nowDate = Date.now();\r\n    this.saveMessageToPHPBackend(this.currentRoom.roomId, this.msg, String(nowDate));\r\n    this.msg = \"\";\r\n\r\n  }\r\n\r\n\r\n  private updateChat(newMessageObject: string): void {\r\n\r\n    this.toJSON = JSON.parse(newMessageObject)\r\n\r\n    if (this.allRooms == null) {\r\n      this.allRooms.push(new Room(this.allRooms.length + 1, [this.toJSON[\"message\"]], [this.hs.loggedInUsername, this.toJSON[\"username\"]]));\r\n\r\n    } else if (this.currentRoom != null && this.currentRoom.roomUsers.includes(this.toJSON[\"username\"]) && this.currentRoom.roomUsers.includes(this.hs.loggedInUsername)) {\r\n\r\n      this.currentRoom.chat.push(this.toJSON[\"message\"]);\r\n\r\n    } else if (!this.checkIfRoomAlreadyExist(this.hs.loggedInUsername, this.toJSON[\"username\"])) {\r\n      console.log(\"!this.checkIfRoomAlreadyExist(this.hs.loggedInUsername, this.toJSON\");\r\n\r\n      var newRoom = new Room(this.allRooms.length + 1, [this.toJSON[\"message\"]], [this.hs.loggedInUsername, this.toJSON[\"username\"]]);\r\n      //createRoom\r\n      this.allRooms.push(newRoom);\r\n      this.users.push(this.hs.getUserByUserName(this.toJSON[\"username\"]));\r\n\r\n    } else {\r\n      let redirectMessageRoom = this.getCorrectRoomByUsernames(this.hs.loggedInUsername, this.toJSON[\"username\"]);\r\n      redirectMessageRoom.chat.push(this.toJSON[\"message\"]);\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Speichert die neue Nachricht ins Backend\r\n   * @param roomId \r\n   * @param message \r\n   * @param nowDate2 \r\n   */\r\n  private async saveMessageToPHPBackend(roomId: Number, message: String, nowDate2: string) {\r\n    console.log(this.hs.otherUser.user_id);\r\n    console.log(this.hs.loggedInUserId);\r\n    await this.hs.saveMessagePHPBackend(roomId, Number(this.hs.otherUser.user_id), message, Number(this.hs.loggedInUserId), nowDate2);\r\n  }\r\n\r\n\r\n  /**\r\n   * Speichert und legt mit dem neuen User einen Raum an\r\n   */\r\n  public async saveUsername() {\r\n    var newUser = await this.hs.getUserByUserName(this.username)\r\n\r\n    var newRoom = await this.createRoom(this.hs.loggedInUsername, \"\");\r\n    this.allRooms.push(newRoom);\r\n    this.users.push(newUser);\r\n\r\n  }\r\n\r\n  /**\r\n   * Startet den Chat, den der Benutzer ausgewählt hat\r\n   * @param clickedUsername \r\n   */\r\n  public async startChat(clickedUser : ChatUser) {\r\n    if (this.currentRoom != null && this.currentRoom.roomUsers.includes(clickedUser.username)) {\r\n      alert(\"Sie chatten schon mit dieser Person\");\r\n    } else {\r\n      var room = this.getCorrectRoomByUsernames(this.hs.loggedInUsername, clickedUser.username);\r\n      if(room != null){\r\n\r\n        if (room.chat != null && room.chat.length != 0) {\r\n          console.log(\"test1\");\r\n          console.log(room.roomId);\r\n          this.currentRoom = room;\r\n          this.chat = this.currentRoom.chat;\r\n          this.hs.getUserByUserName(clickedUser.username);\r\n        } else {\r\n          this.loadAllMessages(room.roomId)\r\n          this.currentRoom = room;\r\n          this.chat = this.currentRoom.chat;\r\n          this.hs.getUserByUserName(clickedUser.username);\r\n        }\r\n\r\n      }else{\r\n        var newUser = this.hs.getUserByUserName(clickedUser.username);\r\n        var newRoom = await this.createRoom(this.hs.loggedInUsername, \"\");\r\n        this.allRooms.push(newRoom);\r\n        this.currentRoom = newRoom;\r\n        this.users.push(newUser);\r\n        this.chat = this.currentRoom.chat;\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Checkt ob der Raum schon existiert.\r\n   * @param loggedInUsername \r\n   * @param cameFromUserName \r\n   * @returns Boolean\r\n   */\r\n  private checkIfRoomAlreadyExist(loggedInUsername: String, cameFromUserName: String): boolean {\r\n    this.allRooms.forEach(s => {\r\n      if (s.roomUsers.includes(cameFromUserName) && s.roomUsers.includes(loggedInUsername)) {\r\n        return true;\r\n      }\r\n    })\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Methode gibt den Raum zurück, in dem die User chatten.\r\n   * @returns Room \r\n   */\r\n  private getCorrectRoomByUsernames(loggedInUsername: String, cameFromUserName: String): Room {\r\n    var helpVar = null;\r\n    this.allRooms.forEach(s => {\r\n      if (s.roomUsers.includes(cameFromUserName) && s.roomUsers.includes(loggedInUsername)) {\r\n        helpVar = s;\r\n      }\r\n    })\r\n\r\n    return helpVar;\r\n  }\r\n\r\n\r\n  private async createRoom(creator: string, roomName: string) {\r\n    var createdRoomId = await this.hs.saveRoomPHPBackend(this.hs.loggedInUsername, \"\");\r\n    let helpVar = new Room(Number(createdRoomId[\"data\"][\"id\"]), [], [this.hs.loggedInUsername, this.hs.otherUser.username]);\r\n    await this.hs.saveChatRoomUserPHPBackend(Number(createdRoomId[\"data\"][\"id\"]), Number(this.hs.loggedInUserId));\r\n    await this.hs.saveChatRoomUserPHPBackend(Number(createdRoomId[\"data\"][\"id\"]), Number(this.hs.otherUser.user_id));\r\n\r\n\r\n    return helpVar;\r\n  }\r\n\r\n  /**\r\n   * Methode ladet alle Nachrichten, die der eingeloggte User geschrieben hat.\r\n   */\r\n  private async loadAllMessages(roomId: any) {\r\n    var responseData = await this.hs.getAllMessages(Number(roomId));\r\n    var allMessages = responseData[\"data\"];\r\n    console.log(allMessages);\r\n    if(allMessages != null){\r\n      this.allRooms.forEach(oneRoom => {\r\n        if (oneRoom.roomId == roomId) {\r\n          for (let i = 0; i < allMessages.length; i++) {\r\n            oneRoom.chat.push(allMessages[i][\"message\"]);\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n  public async loadAllRooms() {\r\n    var usersList = [];\r\n    var user;\r\n    var allRooms = await this.hs.getAllRoomsByUserId(Number(this.hs.loggedInUserId));\r\n    var allRoomsOfLoggedInUser = allRooms[\"data\"];\r\n\r\n    for (let i = 0; i < allRoomsOfLoggedInUser.length; i++) {\r\n\r\n      var allUserOfRoom = await this.hs.getAllUsersByRoomId(allRoomsOfLoggedInUser[i][\"room_id\"]);\r\n      var allUsers = allUserOfRoom[\"data\"];\r\n\r\n      for (let i = 0; i < allUsers.length; i++) {\r\n        usersList.push(allUsers[i][\"user_id\"])\r\n\r\n        if(allUsers[i][\"user_id\"] != this.hs.loggedInUserId){\r\n          user = await this.hs.getUserById(Number((allUsers[i][\"user_id\"])));\r\n        }\r\n      }\r\n\r\n      console.log(user);\r\n      var username = user[\"username\"];\r\n      \r\n      //this.allRooms ist die Liste von Rooms, wo alle Rooms vom User eingespeichert sind\r\n      this.allRooms.push(new Room((allRoomsOfLoggedInUser[i][\"room_id\"]), [], [this.hs.loggedInUsername, username]));\r\n      this.users.push(user);\r\n    }\r\n\r\n\r\n  }\r\n\r\n  public async loadAllUsers() {\r\n    let allUser = await this.hs.getAllUsers();\r\n    \r\n    for(let i = 0; i < allUser.length; i++){\r\n      this.allUsersInContactList.push(new ChatUser(Number(allUser[i][\"user_id\"]), \"\" , \"\", allUser[i][\"username\"]));\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n<mat-sidenav-container class=\"example-container\">\r\n  <mat-sidenav class=\"sideNav\" mode=\"side\" opened>\r\n    <mat-tab-group>\r\n      <mat-tab class=\"chats_tab\">\r\n        <ng-template mat-tab-label>\r\n          <mat-icon class=\"example-tab-icon\">chat</mat-icon>\r\n        </ng-template>\r\n        <mat-action-list>\r\n          <mat-list-item *ngFor=\"let user of users\">\r\n            <mat-icon class=\"users_icon\">wechat</mat-icon>\r\n            <button class=\"users_btn\" mat-list-item (click)=\"startChat(user)\"> {{user.firstname}} {{user.lastname}} </button>\r\n          </mat-list-item>\r\n          </mat-action-list>\r\n      </mat-tab>\r\n      <mat-tab>\r\n        <ng-template mat-tab-label>\r\n          <mat-icon class=\"example-tab-icon\">contacts</mat-icon>\r\n        </ng-template>\r\n        <form class=\"example-form\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n            <mat-label>Benutzersuche</mat-label>\r\n            <input type=\"text\"\r\n                   placeholder=\"Suche\"\r\n                   aria-label=\"Benutzersuche\"\r\n                   matInput\r\n                   [formControl]=\"myControl\"\r\n                   [matAutocomplete]=\"auto\">\r\n            <mat-autocomplete #auto=\"matAutocomplete\">\r\n              <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.username\" >\r\n                {{option.username}}\r\n              </mat-option>\r\n            </mat-autocomplete>\r\n          </mat-form-field>\r\n        </form>\r\n        <mat-action-list>\r\n          <mat-list-item *ngFor=\"let user of allUsersInContactList\">\r\n            <mat-icon class=\"users_icon\">wechat</mat-icon>\r\n            <button class=\"users_btn\" mat-list-item (click)=\"startChat(user.username)\"> {{user.username}} </button>\r\n          </mat-list-item>\r\n          </mat-action-list>\r\n      </mat-tab>\r\n       <mat-tab>\r\n          <ng-template mat-tab-label>\r\n            <mat-icon class=\"example-tab-icon\">settings</mat-icon>\r\n          </ng-template>  \r\n        </mat-tab>\r\n    </mat-tab-group>\r\n\r\n    \r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <div>\r\n        <div [hidden]=\"false\" class=\"chat\">\r\n          <mat-card class=\"info_header\">\r\n          </mat-card>\r\n             <form>\r\n              <mat-card class=\"message-card\">\r\n                <mat-card class=\"single_message_card\" *ngFor=\"let item of chat\">{{item}}</mat-card>\r\n                <mat-form-field class=\"mat-form-field\" color=\"warn\">\r\n                  <mat-label class=\"msg_label\">Message</mat-label>\r\n                  <input matInput [(ngModel)]=\"msg\" name=\"message\">\r\n                </mat-form-field>\r\n            </mat-card>\r\n              <button class=\"send_btn\" (click)=\"sendMsg()\" mat-button>   \r\n                Senden\r\n                <mat-icon>send</mat-icon>\r\n              </button>\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {MatToolbarModule} from '@angular/material/toolbar'; \r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { ChatComponent } from './pages/chat/chat.component';\r\nimport { HttpService } from './services/http.service';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { LoginpageComponent } from './pages/loginpage/loginpage.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ChatComponent,\r\n    NavbarComponent,\r\n    LoginpageComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NoopAnimationsModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    MatToolbarModule,\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    MatSelectModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule \r\n  ],\r\n  providers: [HttpService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n    <span class=\"material-icons\" routerLink=\"/chat\">\r\n        chat\r\n    </span>\r\n    <span class=\"descText\" routerLink=\"/chat\">Chat</span>\r\n\r\n</mat-toolbar>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ChatComponent } from './pages/chat/chat.component';\r\nimport { LoginpageComponent } from './pages/loginpage/loginpage.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'chat', component: ChatComponent},\r\n  { path: '' , redirectTo : '/loginpage', pathMatch : 'full'},\r\n  { path: 'loginpage', component: LoginpageComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}